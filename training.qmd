---
title: "Statistical Analysis of Microbiome Data"
author: Katie McCauley from the Bioinformatics and Computational Biosciences Branch (BCBB)
format: 
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    code-overflow: wrap
    theme: pulse
    fontsize: 0.97em
    column: page-right
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false
## Just to clear the workspace before making the document
rm(list=ls())
```

# About the BCBB

- National Institute of Allergy and Infecious Diseases (NIAID)

  - Office of Cyber Infrastructure and Computational Biology (OCICB)
  
    - Bioinformatics and Computational Biosciences Branch (BCBB)
    

We are a team of computational biologists, data scientists, bioinformatics software developers, and more! 

We are available for research collaborations, short consultations for bioinformatics questions, assistance with script writing and training on methods or tools.

(Plus, our services are free to the NIAID community!)

You can learn more on our website: [bioinformatics.niaid.nih.gov](https://bioinformatics.niaid.nih.gov/), and if you would like to reach out to us, you can e-mail us at bioinformatics@niaid.nih.gov.

# Learning Objectives

Our overarching goal today is to provide you with the tools to start analyzing microbiome data! The specific goals today are:

- Create a Phyloseq Object

- Assess and Explore Raw Microbiome Data

- Standardize/Normalize Sequence Data for Sequencing Depth

- Calculate, compare and visualize:

  - Alpha Diversity (within sample)
  
  - Beta Diversity (between sample)
  
  - Individual Taxa

- Identify Networks in Microbiome Data

A few notes before we start:

- I'm sharing the approaches I typically take for analysis and know very well. Throughout the tutorial, I'll point to alternative methods that are available. There are still active debates about which methods are better. However, I hope that the ideas I share today will at least provide you with avenues of exploration and a platform upon which you can build. And we're always available for a consult at bioinformatics@niaid.nih.gov!

- Trouble installing some of the packages? I've created a Docker container that includes preinstallations of all of the packages we'll be using today. The code you run and edits you make won't be saved, but it will let you play around with the data we have today.

[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/ktmbiome-niaid/microbiome-analysis/HEAD?urlpath=rstudio)

::: {.callout-tip appearance="simple"}
Throughout the training, you will see callouts like this with activities and questions.
:::

# Nephele

Before we start, I just wanted to let everyone know about our Nephele platform:

[![The Nephele Splash Page](images/nephele_screenshot.png)](https://nephele.niaid.nih.gov)

Most of the analysis we do today will use the Amplicon Metagenomics (DADA2) pipeline results, but I will also cover concepts needed for the Shotgun Metagenomics (WGSA2) pipeline results as well.

# Making a Phyloseq Object

[Phyloseq](https://joey711.github.io/phyloseq/) is an R package that allows for relatively simple exploration of microbiome data and keeps the key components you would need all in one easily accessible object^[McMurdie PJ, Holmes S. Phyloseq: a bioconductor package for handling and analysis of high-throughput phylogenetic sequence data. Pac Symp Biocomput. 2012:235-46. PMID: 22174279; PMCID: PMC3357092.]. There are then different and useful accessor functions that we will get to play around with more today. I've always found this diagram to be especially helpful.

![Phyloseq Overview](images/phyloseq_overview.png)

## DADA2

The data from DADA2 that we will be using today is derived from a paper examining differences in the skin microbiome of infants in the United States and Mexico^[https://pubmed.ncbi.nlm.nih.gov/33144313/]. I have included the citation and abstract (with relevant highlighting) below.

> Manus MB, Kuthyar S, Perroni-Marañón AG, Núñez-de la Mora A, Amato KR. Infant Skin Bacterial Communities Vary by Skin Site and Infant Age across Populations in Mexico and the United States. mSystems. 2020 Nov 3;5(6):e00834-20. doi: 10.1128/mSystems.00834-20. PMID: 33144313; PMCID: PMC7646528.

**Abstract:** Daily practices put humans in close contact with the surrounding environment, and differences in these practices have an impact on human physiology, development, and health. There is mounting evidence that the microbiome represents an interface that mediates interactions between the human body and the environment. In particular, the skin microbiome serves as the primary interface with the external environment and aids in host immune function by contributing as the first line of defense against pathogens. Despite these important connections, we have only a basic understanding of how the skin microbiome is first established, or which environmental factors contribute to its development. To this end, this study compared the skin bacterial communities of infants (n=47) living in four populations in Mexico and the United States that span the socioeconomic gradient, where we predicted that **variation in physical and social environments would shape the infant skin microbiome**. Results of 16S rRNA bacterial gene sequencing on **119 samples (armpit, hand, and forehead)** showed that infant skin bacterial diversity and composition are shaped by population-level factors, including those related to socioeconomic status and household composition, and vary by skin site and infant age. Differences in infant-environment interactions, including with other people, appear to vary across the populations, likely influencing infant microbial exposures and, in turn, the composition of infant skin bacterial communities. These findings suggest that variation in microbial exposures stemming from the local environment in infancy can impact the establishment of the skin microbiome across body sites, with implications for developmental and health outcomes.

::: {.callout-tip}
## Activity

Reviewing the abstract, what are the main conclusions of the authors?
:::

I processed the raw data with Nephele using the parameters the authors provided in their manuscript. However, the tables we analyze today are not identical to the version that the authors generated.

### Individual Files

During the class, I'll go through all of the files in the `dada2_outputs` folder. For now, I'll focus on the important files that we need for analysis.

- OTU_table.txt

- phylo/rooted_tree.nwk

As a side note, I've removed the filtered reads (for space reasons) and renamed the folder from `outputs` to `dada2_outputs` for our practice data today. Otherwise, the folder is exactly as you would obtain it from Nephele.

We'll read in our ASV table, which tells us the counts of reads that were found for each sequence variant within each sample.

```{r}
library(phyloseq)
library(ggplot2)
setwd("~/OneDrive/training/microbiome-analysis/")
otu <- read.table("data/dada2_outputs/OTU_table.txt", header=T, check.names=F, sep="\t", comment="", quote="", row.names=1)
```

We can explore this file (data frame) using a few basic R commands. I like to do this because it can tell me valuable information about the dataset I have just brought into R, and might help me if I run into issues later.

```{r}
dim(otu)

otu[1:5,1:5]
```

::: {.callout-tip}
## Activity

How many rows and columns are in the data?

What is the ASV identifier like?

How many seq2 reads does SRR12823315 have?
:::

We first next need to remove the taxonomy information from this table so that it can be added to the phyloseq object separately as the `tax_table` object.

```{r}
tax <- as.matrix(otu[, c("Kingdom","Phylum","Class","Order","Family","Genus","Species")])
## clean up our OTU table so it no longer includes the taxonomy names
otu[, c("Kingdom","Phylum","Class","Order","Family","Genus","Species")] <- NULL
```

Next, we read in a phylogenetic tree. This file tells us the approximate distance between ASVs, which is calculated through multiple sequence alignment. In most shotgun metagenomic settings, it's much more difficult to get computationally-meaningful phylogenetic trees for the taxa identified, so you are unlikely to use them in that context.

```{r}
library(ape)
tree <- read.tree("data/dada2_outputs/phylo/rooted_tree.nwk")
```

Finally, we want to include a table of data about each of the samples.

```{r}
sampdat <- read.table("data/webinar_demo_metadata.txt", header=T, check.names=F, sep="\t", comment="", quote="")
head(sampdat)
# We need our rownames to reflect our sample names, which are accessible in the `Description` column
rownames(sampdat) <- sampdat$Description
```

Now we can build our phyloseq object that we'll need for analysis. Note how each of the four components we just read into R has been included in the function.

```{r}
dada2_phyloseq_object <- phyloseq(otu_table(otu, taxa_are_rows=TRUE), sample_data(sampdat), phy_tree(tree), tax_table(tax))
```

This object can then be summarized by printing it:

```{r}
dada2_phyloseq_object
```

### Importing using a BIOM file

BIOM files are a special file type that includes not only your count data, but your metadata too. Nephele creates one automatically for several pipelines, including DADA2, QIIME2, WGSA2, and, more recently, BioBakery. Phyloseq has a special function that allows you to quickly import this file.

```{r}
otu_table_from_biom <- import_biom("data/dada2_outputs/taxa.biom", treefilename = "data/dada2_outputs/phylo/rooted_tree.nwk")
```

This file can also be summarized like above.

```{r}
otu_table_from_biom
```

You'll notice that the BIOM file contains fewer sample variables. This is because it uses the mapping file submitted to Nephele, and I only submitted one variable (USA vs Mexico) when preparing the mapping file. If your mapping file includes more information, you can use this relatively seamless phyloseq function to bring in your data.

## WGSA2

### Importing from Individual Files

Data from WGSA2 is organized differently. Also, as I had removed larger files from the DADA2 outputs, I've also removed the QC'd reads file and the folder for assembly of individual samples. I have a copy of the full expected output and will go through it during training.

At any rate, the files you'll need to make the files below can be found under `wgsa2_outputs`. You can easily import either:

- Taxonomy-based data: TAXprofiles/readsTAX_RefDB/merged_tables

```{r}
wgsa2_otu_table <- read.table("data/wgsa2_outputs/TAXprofiles/readsTAX_plusPFV/merged_tables/merged_Counts.txt", header=T, sep="\t", row.names=1)
wgsa2_tax_table <- as.matrix(read.table("data/wgsa2_outputs/TAXprofiles/readsTAX_plusPFV/merged_tables/merged_TAX.txt", header=T, sep="\t", row.names=1))
wgsa2_sample_data <- read.table("data/wgsa2_outputs/mapping_file.txt", header=T, sep="\t", comment="", row.names=1)

wgsa2_phyloseq <- phyloseq(otu_table(wgsa2_otu_table, taxa_are_rows = T), tax_table(wgsa2_tax_table), sample_data(wgsa2_sample_data))
wgsa2_phyloseq
```

- Pathway-based data (what potential pathways do they have?): PWYprofiles/keggPWYs.MP/merged_tables

```{r}
wgsa2_otu_table_pwy <- read.table("data/wgsa2_outputs/PWYprofiles/keggPWYs.MP/merged_tables/merged_Counts.txt", header=T, sep="\t", row.names=1)
wgsa2_tax_table_pwy <- as.matrix(read.table("data/wgsa2_outputs/PWYprofiles/keggPWYs.MP/merged_tables/merged_allTiers.txt", header=T, sep="\t", row.names=1))

wgsa2_pwy_phyloseq <- phyloseq(otu_table(wgsa2_otu_table_pwy, taxa_are_rows = T), tax_table(wgsa2_tax_table_pwy), sample_data(wgsa2_sample_data))
wgsa2_pwy_phyloseq
```

- Gene-based data (what genes exist?): PWYprofiles/keggPWYs.MP/merged_tables

```{r}
gene_table <- read.table("data/wgsa2_outputs/PWYprofiles/keggPWYs.MP/merged_tables/merged_geneTPMtable.txt", header=T, check.names=F, sep="\t", comment="", row.names=1)
head(gene_table)

wgsa2_gene_table <- gene_table[, !names(gene_table) %in% "geneNAME"]
wgsa2_gene_tax <- as.matrix(gene_table[, "geneNAME"])
rownames(wgsa2_gene_tax) <- rownames(gene_table)
colnames(wgsa2_gene_tax) <- "geneNAME"

wgsa2_gene_phyloseq <- phyloseq(otu_table(wgsa2_gene_table, taxa_are_rows = T), tax_table(wgsa2_gene_tax), sample_data(wgsa2_sample_data))
wgsa2_gene_phyloseq
```

For now, we will leave all of this data behind because three samples isn't enough to make major statistical comparisons on, but most of the analysis methods we use below are applicable to data derived from the WGSA2 pipeline.

# Data Assessment

Before we can start answering interesting questions about our data, there are a few things we need to look into.

## General Data Exploration

Before doing anything exciting with the data, I simply want to get familiar with what we're about to analyze, and there are a couple of plots that I generate using phyloseq to help me do that. These types of plots can be incredibly informative as you're just getting started with a dataset and want to know if everything has been successful so far.

First, is a simple bar plot of the taxa in the dataset:

```{r}
#| fig-width: 9
dada2_class <- tax_glom(dada2_phyloseq_object, "Class", NArm = F)
plot_bar(dada2_class, fill="Class") + guides(fill="none")
```

This already gives us a little bit of a sense of our data, even if it is just at the Class level.

Another type of figure I like to do very early (and we'll talk about it more later) is a PCoA plot. This plot is useful because it puts samples in relationship to each other. In these plots, samples are points and closer points represent more similar samples while further points represent further samples.

```{r}
ord <- ordinate(dada2_phyloseq_object, method="PCoA", distance="bray")
plot_ordination(dada2_phyloseq_object, ord)
```

Even without adding any color for different variables, we can already see that samples seem to cluster together in this data. Fortunately, this is expected because we know that the study is looking at three different body sites, and as I just hinted at, we can add color to visualize this:

```{r}
plot_ordination(dada2_phyloseq_object, ord, color="bodysite")
```

The forehead and hands group together while the armpit is relatively distinct.

Other things we might find are:

- Potential outlier samples, so maybe a sample that got contaminated

- If we had negative controls, we would want to see them cluster away from our samples

We'll use some of this information later, and dive deeper into everything I just did, but this is just one way that we can perform sanity checks super early on.

## Negative Control Consideration

Unfortunately the publicly available data we have today doesn't include the sequencing data from the extensive negative controls they used for quality control and mention in their paper. These can help us identify sequence reads that are likely arose from reagents or cross-sample contamination. For now, I will point to tools like DECONTAM^[Davis, N.M., Proctor, D.M., Holmes, S.P. et al. Simple statistical identification and removal of contaminant sequences in marker-gene and metagenomics data. Microbiome 6, 226 (2018). https://doi.org/10.1186/s40168-018-0605-2], which you can read about [here](https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-018-0605-2) and find the technical information [here](https://benjjneb.github.io/decontam/vignettes/decontam_intro.html). This package helps identify taxa that are likely to have arisen from negative controls and can remove them.

## Removal of Lower-Abundance Taxa

This step is intended to remove very low abundance taxa from the dataset. These can arise through potential errors and ultimately increase the sparsity of the already-sparse data we analyze.

To determine how our taxa are distributed across our dataset, I like to plot a histogram of the log10 taxon counts within the dataset using a phyloseq function that can pull that information out (`taxa_sums`). 

```{r}
hist(log10(taxa_sums(dada2_phyloseq_object)))
```

We can see from the plot that it is mostly comprised of low-abundance taxa. There are relatively few high-abundance taxa in the dataset.

For now, we'll filter out just the ultra-low abundance taxa before proceeding. I typically do this by removing any taxon with less than 0.001% of the total reads, which I can calculate below.

```{r}
critical_value <- 0.00001*sum(taxa_sums(dada2_phyloseq_object))
dada2_phyloseq_filtered <- filter_taxa(dada2_phyloseq_object, function(x) sum(x) > critical_value, TRUE)
dada2_phyloseq_filtered
```

Our filtered dataset, especially in this instance, has many-fewer taxa but the actual overall number of reads in the table hasn't changed that much.

```{r}
sum(taxa_sums(dada2_phyloseq_filtered))/sum(taxa_sums(dada2_phyloseq_object))
```

## Normalization/Standardization

One last thing we need to do before starting the core of our analysis is standardize the counts between samples. We'll start to do this by looking at the sequencing depth of our samples. Note that in the previous step we were looking at taxa sums and now we are looking at sample sums.

```{r}
summary(sample_sums(dada2_phyloseq_filtered))
hist(sample_sums(dada2_phyloseq_filtered))
```

Here we can see a wide variety of sequencing depth across samples. Some samples have very few reads, while others have several thousand. We typically want to "standardize" this in some way because differences in sequencing effort can contribute to potential bias. How this happens, though, is an area of active, lively debate that continues to this day. And new methods are being developed, though I haven't seen uptake of the new methods changing very much.

A few papers on the topic are listed below if you want to read more.

> McMurdie PJ, Holmes S. Waste not, want not: why rarefying microbiome data is inadmissible. PLoS Comput Biol. 2014 Apr 3;10(4):e1003531. doi: 10.1371/journal.pcbi.1003531. PMID: 24699258; PMCID: PMC3974642.

> Weiss S, Xu ZZ, Peddada S, Amir A, Bittinger K, Gonzalez A, Lozupone C, Zaneveld JR, Vázquez-Baeza Y, Birmingham A, Hyde ER, Knight R. Normalization and microbial differential abundance strategies depend upon data characteristics. Microbiome. 2017 Mar 3;5(1):27. doi: 10.1186/s40168-017-0237-y. PMID: 28253908; PMCID: PMC5335496.

> McKnight, DT, Huerlimann, R, Bower, DS, Schwarzkopf, L, Alford, RA, Zenger, KR. Methods for normalizing microbiome data: An ecological perspective. Methods Ecol Evol. 2019; 10: 389–400. https://doi.org/10.1111/2041-210X.13115

> Lin H, Peddada SD. Analysis of microbial compositions: a review of normalization and differential abundance analysis. NPJ Biofilms Microbiomes. 2020 Dec 2;6(1):60. doi: 10.1038/s41522-020-00160-w. PMID: 33268781; PMCID: PMC7710733.

At any rate, the two main options are:

- Rarefaction: subsample all samples to an even read depth, typically one that captures the greatest amount of diversity for a majority of the samples and allows a majority of the samples to be retained. Alpha rarefaction curves, which are provided with the Nephele output, can help in determining a rarefaction depth.

- Normalization: fit the distribution of read counts to an expected distribution, typically Negative Binomial. There are many methods from several packages you can use to perform normalization. For instance, a popular transformation is the Variance Stabilized Transformation from the DESeq2 package. There's also the Trimmed Mean of M-component (TMM) normalization available through the edgeR package, and the limma package has normalizations as well. Note that all of the methods I've listed got their start in RNAseq data; however, the key difference between microbiome data and RNAseq data is that RNAseq data is relatively dense (few zeros) and microbiome data ends up exceedingly sparse (many zeros), changing how these tools perform on microbiome data.

My personal preference is rarefaction, which has worked well for me over several datasets, and I'll use that method today. I also prefer it because I can use the same "standardized" dataset across all of my analyses (alpha diversity, beta diversity, and significant taxa) without needing to re-normalize or change the relationships between my samples and taxa. However, you may want to consider normalization methods if you have too many lower-abundance samples that are needed for your analysis and cannot be otherwise removed.

To perform rarefaction, we'll first review the alpha rarefaction curves found under `data/data2_outputs/graphs/rarecurve.html`. Given the plot, we will rarefy to 10,000 reads per sample, which is the depth that was chosen by the authors of the paper as well. At that depth, we retain a majority of the samples and have reached the asymptote of the curve for a majority of samples as well.

```{r}
dada2_rare <- rarefy_even_depth(dada2_phyloseq_filtered, sample.size = 10000, replace=F, rngseed=123)
dada2_rare
```

# Quick Stats Refresher


## Types of Variables

There are also a few core types of variables that we'll encounter today:

- *Continuous/Numeric/Integer*: These variables tend to be any set of numbers (examples include: systolic blood pressure)

- *Categorical/Factor/Character*: Characterized by having two or more values or categories (examples include: "floor type" in which the potential responses could be "hardwood","carpet", or "tile"; "favorite fruit" with "apples","bananas", "cherries", or "dates" as potential responses). Also, sometimes continuous variables can be turned into categorical variables (ie, numeric cups of coffee can be grouped into categories of 1-2, 3-4, 5+)

- *Binary*: A special type of categorical variable that is typically coded as "Yes/No" or "0/1" (examples include: whether participants have the condition of interest or not, whether participants have siblings)

The type of variable you are analyzing has impacts for how the variable can be analyzed as well as how it is interpreted, so being aware of this throughout your analysis is vital.

::: {.callout-tip}
## Activity

Review the metadata we printed above and link a variable type to each variable.
:::

## Common Statistical Tests and When to Use Them

Using the information above, we can start now to talk about different statistical tests we can use for each type of data and for different types of distributions. I have made an attempt to describe when and where you might use different types of statistical tests in this "cheat sheet". Note that this only covers relationships between one independent/outcome variable and one or more dependent/response variable(s).

![Statistical Test "Cheat Sheet"](images/statistical_test_cheat_sheet.png)

General linear models are "general" because they allow us to use some of the other distribution types beyond Gaussian/normal as our outcome variable.

Hopefully the workflow can serve as a general guide for which tests you might want to use. We are unable to cover everything today, but perhaps some of the other test types can serve as bread crumbs for future exploration. We will also cover a few tests beyond those covered in the above figure for some of the multi-dimensional statistics we use in microbiome data.

...Alright, let's jump into some data!

# Alpha Diversity

Allows us to ask: How many different types of sequences are in an environment (sample)?

There are several commonly used metrics, which act as a summary statistic for a single sample.

- Shannon's Index: Takes into account both species richness and evenness - typically the backbone of other diversity metrics; higher values indicate more diverse and equally distributed communities, but it won't be a direct count of the number of taxa present in a sample

- Pielou's Evenness: Summarizes the distribution of taxa within a sample. "Uneven" communities are highly dominated by relatively few taxa.

- Chao1 Richness: Assumes that the counts of taxa within a sample estimates a Poisson distribution (a "normal" distribution for count data); takes the counts within a sample and corrects for deviations from the Poisson distribution

- Faith's Phylogenetic Diversity: This metric includes additional phylogeny information in the calculation. Are there lots of taxa within one clade or do you get taxa from a variety of locations on the phylogenetic tree? This is calculated by taking the sum of the branches among taxa that occur within a sample.

::: {.callout-tip}
## Activity

If the two large circles below indicate two samples, which sample has higher Evenness? Which sample has higher richness?

![](images/AlphaDiversitySummary.png)

:::

## Calculating Alpha Diversity

Phyloseq includes a function that calculates some of the common diversity indices automatically. All calculations of alpha diversity must be done on rarefied data because otherwise the values for each sample end up highly driven by the sequencing depth for each sample.

```{r}
phy_alphadiv <- estimate_richness(dada2_rare)
head(phy_alphadiv)
```

This gets us pretty far, but I also want to go over how you can calculate some of the common metrics "manually" and get others that aren't in the default set for phyloseq. For this, we'll use some components of the `vegan` package. This is a useful package that I think you should take the time to get to know. I would start [here](https://cran.r-project.org/web/packages/vegan/index.html), on the CRAN website, which includes several links to tutorials and FAQs developed by the package authors. The resources available across the internet about the `vegan` package have also bloomed in the past several years.

Below, I calculate evenness, Chao1 richness and phylogenetic diversity:

```{r}
library(vegan)
otu_table <- t(otu_table(dada2_rare))

evenness <- diversity(otu_table)/log(specnumber(otu_table)) #note that rowSums(otu_table > 0) == specnumber(otu_table)
chao1 <- t(estimateR(otu_table))[,2]
phy_div <- picante::pd(otu_table, phy_tree(dada2_rare), include.root = TRUE)[,1]
```

And we combine them all together here:

```{r}
all_alphadivs <- data.frame(phy_alphadiv, evenness, chao1, phy_div)
```

And then add them to our phyloseq object:

```{r}
update_sample_data <- merge(sample_data(dada2_rare), all_alphadivs, by=0)
rownames(update_sample_data) <- update_sample_data$Row.names
update_sample_data$Row.names <- NULL

sample_data(dada2_rare) <- update_sample_data
head(sample_data(dada2_rare))
```

## Comparing Alpha Diversity

### Running Linear Models

Our first question using this data is simple: is there a difference in phylogenetic diversity between countries at each body site? We already know that the composition between body sites is quite distinct, so this presents a nice place to start.

We can do this using linear models which allow us to perform this comparison. Note that I'm using the subset function to iteratively focus on each body site.

Also, when comparing categorical variables to a continuous variable, we typically need a reference group. In these examples, you see "countryUSA" to the right of all of the models, but no mention of Mexico. This is because Mexico is considered the reference group (because it is higher in alphabetical order). If you need to change this, you can use the `relevel(var, ref="MEX")` function, but we will keep the comparison we have here.

```{r}
# the update_sample_data object we created above actually is a nice format for our analysis here, so we will use that dataset.
summary(lm(phy_div ~ country, data=subset(update_sample_data, bodysite == "AP")))
summary(lm(phy_div ~ country, data=subset(update_sample_data, bodysite == "HA")))
summary(lm(phy_div ~ country, data=subset(update_sample_data, bodysite == "FH")))
```

These results suggest that when comparing countries, only the phylogenetic diversity of the hand and forehead are significantly different, and both exhibit lower phylogenetic diversity in the USA compared to Mexico.

Let's explore another interesting, *linear* variable: **age**. In these results, we no longer have a reference group, but calculate the coefficient as the unit change in phylogenetic diversity for every unit-increase in age. In other words, for the first statistical test we do below, there is a 0.2983-unit increase in phylogenetic diversity for every month of life increase, which is significant (P=0.00925).

```{r}
summary(lm(phy_div ~ age_months, data=subset(update_sample_data, bodysite == "AP")))
summary(lm(phy_div ~ age_months, data=subset(update_sample_data, bodysite == "HA")))
summary(lm(phy_div ~ age_months, data=subset(update_sample_data, bodysite == "FH")))
```

## Visualizing Alpha Diversity

Visualization of alpha diversity is relatively straight forward and is typically performed through box and whiskers plots, which are easy to create with ggplot2.

```{r}
library(ggplot2)
ggplot(update_sample_data, aes(x=bodysite, y=phy_div, fill=country)) +
  geom_boxplot()
```

We can see from this plot that forehead and hand samples differ in diversity between Mexico and USA, with Mexico typically having higher diversity.

::: {.callout-tip}
## Activity

Repeat the process for `age_months`.
:::

# Beta Diversity

Beta diversity allows us to understand effects observed across samples obtained from the population being studied, and allows us to analyze samples in the context of other samples.

Samples are compared to each other based on different calculations of distances. Each distance allows us to learn something new about our data:

- Bray Curtis: Weights the distances based on **higher** abundance taxa

- Canberra: Weights the distances based on **lower** abundance taxa

- UniFrac: uses the phylogenetic tree to help calculate the distances

  - Weighted UniFrac combines phylogeny with the abundances, focusing more on the higher abundance taxa (basically Bray Curtis + phylogeny)
  
  - Unweighted UniFrac: simply focuses on the phylogenetic information without regard to abundance

## What is a distance matrix?

It is an "n x n" matrix (meaning that it has samples on the rows and the columns) that is based on a calculation of distances.

This is an example built from our practice data today. You can see that each of the rows and columns is a sample that gets compared to itself.

```{r}
## note the use of the explicit call to phyloseq for the distance function -- there are many different distance functions and sometimes they can get mixed up.
distance_matrix <- phyloseq::distance(dada2_rare, method="bray")
as.matrix(distance_matrix)[1:5,1:5]
```

::: {.callout-tip}
## Activity

Which sample pair is most similar? Most distinct?
:::

## Calculating Beta Diversity

We can calculate several types of distance matrices using phyloseq through the `distance` function. Generating this distance using phyloseq is exceptionally easy. UniFrac distances can be easily made because the tree is already contained within the phyloseq object.

A Bray Curtis distance matrix was created above, but we can also calculate a weighted UniFrac distance matrix (using the phylogenetic tree) very easily

```{r}
weighted_distance <- phyloseq::distance(dada2_rare, method="wunifrac")
as.matrix(weighted_distance)[1:5,1:5]
```

## Comparing Beta Diversity

Now we want to start relating this diversity to variables of interest. Our first question will be similar to the previous question we asked: are there compositional differences in the skin microbiome between USA and Mexico?

To answer this question, we'll use a special statistical method called Permutational Analysis of Variance or PERMANOVA, developed by Marti J Anderson^[Anderson, M.J. (2017). Permutational Multivariate Analysis of Variance (PERMANOVA). In Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri and J.L. Teugels). https://doi.org/10.1002/9781118445112.stat07841], that specifically analyzes distance matrices.

It allows us to ask whether a specific variable "explains a significant proportion of variance" across microbial communities. This is done by calculating a baseline F statistic, which is a comparison of variance (total sum of squares) both within groups and between groups.

From this we can calculate a p-value by shuffling the distance matrix around many times (default = 999) and then re-calculate the F-statistic. The p-value then becomes the proportion of times that the permuted F-statistics are greater than the overall F-statistic (aka, the literal definition of a p-value).

To perform this comparison, we actually don't need to do any of this manually. We place our calculated distance matrix into the "response" variable part of a model, which can be done using the `vegan` package's `adonis2` function. I am also subsetting this data first to focus on the community composition differences at each body site.

```{r}
dada2_rare_ap <- subset_samples(dada2_rare, bodysite %in% "AP")
dada2_rare_ha <- subset_samples(dada2_rare, bodysite %in% "HA")
dada2_rare_fh <- subset_samples(dada2_rare, bodysite %in% "FH")
adonis2(phyloseq::distance(dada2_rare_ap, method="wunifrac") ~ sample_data(dada2_rare_ap)$country)
adonis2(phyloseq::distance(dada2_rare_ha, method="wunifrac") ~ sample_data(dada2_rare_ha)$country)
adonis2(phyloseq::distance(dada2_rare_fh, method="wunifrac") ~ sample_data(dada2_rare_fh)$country)
```

The results we got above suggest that the USA and Mexico have a significantly different microbiome composition at each body site. There are a few key points of interest in this result that I also want to point out. The columns, in order, indicate: degrees of freedom, Sum of Squares (see variance calculation above), the R-squared value (or the proportion of variance explained by the variable), the critical F-statistic, and the P-value.

::: {.callout-tip}
## Question

Run an `adonis2` function a second time. What happened? Why?
:::

::: {.callout-tip}
## Question

Keeping in mind the results from above, try comparing composition using a different distance matrix. Can we learn anything new? What about another variable?
:::

::: {.callout-warning}
## Caution

I should say one word of warning -- I'm able to do this in a more "simple" way because I know that the order of samples in the OTU/ASV table from the phyloseq object is in the same order as it will be in the distance matrix, which is in the same order as the sample data. If the distance matrix comes from some other data-generating process and there is *any* chance that the samples are in a different order, you will still get an R2 and P-value and no warning will be produced, but the results are unlikely to be accurate.

If you want to double check, you can try something like this:

```{r}
identical(labels(weighted_distance), rownames(sample_data(dada2_rare)))
```
:::

## Visualizing Beta Diversity

To visualize these findings, we typically use ordination, which is what I hinted at while discussing the initial steps I take when I look at new data. This process takes the pairwise distances that were calculated above and used in the `adonis2` function and places them into "coordinate" space so that we can view them. The two main methods of ordination are:

- **Principal Coordinates Analysis (PCoA)**: This method is also known as "Metric Multi-Dimensional Scaling (MDS)" and arranges the points similarly to how they are arranged in the distance matrix. Using this method results in a number of *eigenvalues* that can be used as axes to represent the approximate distances.

- **Non-metric Multi-Dimensional Scaling (NMDS)**: Instead of focusing on the actual distances themselves, NMDS takes a more non-parametric approach, focusing on ensuring that the ranks of the distances are correctly spaced.

Both methods try to optimize the distances so that the majority of the variance is explained in as few axes as possible. PCoA does the best that it can, and NMDS forces the distances into a pre-defined number of axes.

In phyloseq, both are again straight-forward if we use the `ordinate` function. We can also see some of the standard output of the NMDS method, showing some of the iterations it takes.

```{r}
pcoa_ord <- ordinate(dada2_rare_ha, method="PCoA", distance="wunifrac")
nmds_ord <- ordinate(dada2_rare_ha, method="NMDS", distance="wunifrac")

plot_ordination(dada2_rare_ha, pcoa_ord, color="country") + ggtitle("PCoA Plot")
plot_ordination(dada2_rare_ha, nmds_ord, color="country") + ggtitle("NMDS Plot")
```

As you can see, the red points are quite separate from the blue points in both ordinations.

One thing I like to do is use elipses from ggplot to help understand the characteristics of the differences between groups, and can be added easily:

```{r}
plot_ordination(dada2_rare_ha, pcoa_ord, color="country") + ggtitle("PCoA Plot") + stat_ellipse(level=0.2)
```

Here, I'm using a 20% "confidence level" for the ellipses, and it's typically the level I always use. It tends to reflect the significance of a PERMANOVA and the placement of the points pretty well. If you want, you can experiment with other "levels" and find the one that you prefer.

# Significant Taxa

Another very standard analysis that we'll focus on today is comparing the abundance of taxa. It's all fine and good that we see large compositional differences between the USA and Mexico, but until we know specifically what taxa appear to be differentially abundant, it's hard to speculate about the biological importance of that difference.

## Comparing Taxa

Again, there are several different approaches for analyzing differential abundance, and the debate is very active and very passionate. As I did before, below are some papers that give you a taste for not only this debate but the diversity of options and approaches:

> Nearing JT, Douglas GM, Hayes MG, MacDonald J, Desai DK, Allward N, Jones CMA, Wright RJ, Dhanani AS, Comeau AM, Langille MGI. Microbiome differential abundance methods produce different results across 38 datasets. Nat Commun. 2022 Jan 17;13(1):342. doi: 10.1038/s41467-022-28034-z. Erratum in: Nat Commun. 2022 Feb 3;13(1):777. PMID: 35039521; PMCID: PMC8763921.

> Yang L, Chen J. Benchmarking differential abundance analysis methods for correlated microbiome sequencing data. Brief Bioinform. 2023 Jan 19;24(1):bbac607. doi: 10.1093/bib/bbac607. PMID: 36617187; PMCID: PMC9851339.

I want to specifically highlight the database established by the paper below, [BugSigDB](https://bugsigdb.org/Main_Page). The database uses *manual curation* of 831 studies (as of October 26, 2023) to identify the methods used and taxa most frequently observed as differential.

> Geistlinger L, Mirzayi C, Zohra F, Azhar R, Elsafoury S, Grieve C, Wokaty J, Gamboa-Tuz SD, Sengupta P, Hecht I, Ravikrishnan A, Gonçalves RS, Franzosa E, Raman K, Carey V, Dowd JB, Jones HE, Davis S, Segata N, Huttenhower C, Waldron L. BugSigDB captures patterns of differential abundance across a broad range of host-associated microbial signatures. Nat Biotechnol. 2023 Sep 11. doi: 10.1038/s41587-023-01872-y. Epub ahead of print. PMID: 37697152.

For now, I will show you how I use one particularly flexible tool called **Maaslin2**. I'm still interested in the comparison of countries, and want to know what specific taxa are enriched among the forehead samples in the USA vs Mexico. 

Maaslin2 was developed to be used directly in R or on the command line, but the "in-R" documentation (that you get if you run `?Maaslin`) could be better. For now, I'll point you to [the website for Maaslin](https://huttenhower.sph.harvard.edu/maaslin/) so that we can learn about which options are available.

### Filtering for Differential Abundance 

Sometimes, datasets can have immense diversity, and it is important to focus on features that are likely to be the most relevant. In addition, when we perform so many statistical tests, we run the risk of "Type I error", or having a significant finding that is in fact only significant by chance (because so many tests were performed).

We can use **prevalence** to filter down to taxa that could be most informative. Prevalence is the proportion of samples with any counts for a taxon. Therefore, an ASV present in 4 of 10 samples is 40% prevalent.

Maaslin2 has a few other parameters that you can use to filter down to taxa that are likely to be more important before a single p-value is generated, but we won't cover them today.

When we're reviewing our results, we use a False Discovery Rate (FDR)-corrected p-value, sometimes called a q-value, to rank our findings. There are a handful of different methods for calculating q-values, but I won't go into them here. Their primary goal is to help us avoid the "Type I error" of performing a large number of statistical tests and comparing them.

## Running Maaslin2

In example I'm working with today, I'm:

- using the forehead dataset to compare taxa between our two countries of interest
- considering a q-value of 0.25 to be considered "significant" by the software (though we'll set our own limits later)
- using no normalization of my rarefied data, but log-transforming it and analyzing with a linear model ^[For my "model-fit tests", I took the sum of the residuals (which is the difference between the model's prediction and the actual value) using `rowSums(run_maaslin$residuals)` for each taxon and saw that the linear model with a log transformation provided the lowest values (ie, the lowest difference between prediction and actual values)]
- enforcing a minimum prevalence of 40%, which means a taxon must be present in ~15 samples for it to be analyze.

```{r}
#| label: maaslin2
#| warning: false
#| message: false

library(Maaslin2)
capture.output(
  run_maaslin <- Maaslin2(input_data= data.frame(otu_table(dada2_rare_fh)),
           input_metadata = data.frame(sample_data(dada2_rare_fh)),
           output="maaslin2_results",
           fixed_effects = c("country"),
           max_significance = 0.25,
           normalization = "NONE",
           transform="LOG",
           analysis_method="LM",
           min_prevalence = 0.4,
           ), file="maaslin2_stdout.txt"
)
```

Running Maaslin2 creates the following table:

```{r}
all_res <- run_maaslin$results
head(all_res)
```

Here, we can see:

- "feature": the feature of interest
- "metadata":
- "value": the comparator category (since it's a categorical variable) - the reference would be the category not mentioned
- "coef": the coefficient indicating the effect size of the relationship
- "stderr": standard error/variation around the mean for that taxon/feature
- "pval: the raw, unadjusted p-value
- "name": combination of metadata and value
- "qval": a p-value adjusted for the multiple comparisons performed
- "N": number of samples that contributed to the analysis
- "N.not.zero": number of non-zero values for that taxon; it can help identify "zero-inflated" taxa

**Maaslin2** went through each taxon individually and related it to whether it was higher or lower in the USA vs Mexico. Positive `coef` values indicate the taxon was higher in the USA compared to Mexico, while negative values indicate the taxon was higher in Mexico compared to USA. 

## Visualizing Taxa

Maaslin kindly produces some boxplots of significant taxa that are accessible within the output directory. I tend to use them for quick review when I need them (ie, if I need to see how stable my results appear to be), and we can make a few boxplots ourselves here:

```{r}
combined_counts <- merge(t(otu_table(dada2_rare_fh)), sample_data(dada2_rare_fh), by=0)

ggplot(combined_counts, aes(x=country, y=seq73, color=country)) + geom_boxplot() + geom_point()
```

Another plot I generate after running any differential abundance analysis is a volcano plot. You've seen these for other types of data before and they are helpful because they can be quickly interpretable -- the most significant ASVs rise to the top.

In its most basic form, a volcano plot can still be interesting.

```{r}
ggplot(all_res, aes(x=coef, y=-log10(pval))) + geom_point()
```

However, its power lies in the ability to add different layers of information. Below, I add color and Genus-level labels to the significant taxa (separating them from the non-significant taxa which remain grey). You can get as pretty and technical as your heart desires with this plot.

```{r}
all_res_tax <- merge(all_res, tax_table(dada2_rare), by.x="feature", by.y=0) #merge my differential taxa with the taxonomy information
all_res_tax$Genus_sig <- ifelse(all_res_tax$qval < 0.05, all_res_tax$Genus, NA) # create a new variable that only focuses on the significant Genera (missing otherwise)

## Plot
ggplot(all_res_tax, aes(x=coef, y=-log10(pval), color=Genus_sig)) +
  geom_point() +
  ggrepel::geom_text_repel(data=subset(all_res_tax, qval < 0.05), aes(label=Genus))
```

::: callout-tip

Using what we've learned, perform differential abundance analysis:

- using a different body site
- comparing forehead vs hand among participants from Mexico
- devise your own question based on what we've explored today

:::

## Wrap-up

Thank you for joining today! If you have feedback, ideas for additional sessions, questions about your own project, etc, feel free to reach out to me (kathryn.mccauley@nih.gov) or make a ticket to work with the Bioinformatics team (https://niaid-amp.powerappsportals.us/) and we would be happy to assist.
